{% extends 'baseXleGm.html.twig' %}

        {% block javascripts %}
            <script>
                // In this example, we center the map, and add a marker, using a LatLng object
                // literal instead of a google.maps.LatLng object. LatLng object literals are
                // a convenient way to add a LatLng coordinate and, in most cases, can be used
                // in place of a google.maps.LatLng object.

                var map;
                function initialize() {
                    var mapOptions = {
                        zoom: 8,
                        center: {lat: -34.397, lng: 150.644}
                    };
                    map = new google.maps.Map(document.getElementById('map'),
                        mapOptions);

                    var marker = new google.maps.Marker({
                        // The below line is equivalent to writing:
                        // position: new google.maps.LatLng(-34.397, 150.644)
                        position: {lat: -34.397, lng: 150.644},
                        map: map
                    });

                    // You can use a LatLng literal in place of a google.maps.LatLng object when
                    // creating the Marker object. Once the Marker object is instantiated, its
                    // position will be available as a google.maps.LatLng object. In this case,
                    // we retrieve the marker's position using the
                    // google.maps.LatLng.getPosition() method.
                    var infowindow = new google.maps.InfoWindow({
                        content: '<p>Marker Location:' + marker.getPosition() + '</p>'
                    });

                    // google.maps.event.addListener(marker, 'click', function() {
                    //      infowindow.open(map, marker);
                    //  });
                    google.maps.event.addListener(marker, 'click', function() {
                        console.log('Place ID: ');
                        /*
                        infowindow.setContent('<div><strong>' + place.name + '</strong><br>' +
                            'Place ID: ' + place.place_id + '<br>' +
                            place.formatted_address + '</div>');
                        infowindow.open(map, this);
                        */
                    });
                }

                google.maps.event.addDomListener(window, 'load', initialize);
            </script>
        {% endblock %}


{% block body %}
    <div class="container-fluid content_block">
        <div class="row">
            <h1>welcome to Google Cafe!</h1>
            <div class="col-md-3" style="background-color: aliceblue">
                <b>side left</b>
                <button class="btn btn-success"
                onclick="
                $('#info_test').html('jQuery is here');"
                >test</button>
            </div>
            <div class="col-md-9" style="background-color: lightgrey">
                <b>side right</b><br>
                <div id="info_test"></div>

            </div>
        </div>

    </div>

    <script src="{{ asset('build/manifest.js') }}"></script>
    <script src="{{ asset('build/js/common.js') }}"></script>
    <script src="{{ asset('build/js/app.js') }}"></script>

{% endblock %}
