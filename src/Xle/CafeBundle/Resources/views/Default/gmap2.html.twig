<!DOCTYPE html>
<html>
<head>
    <title>Place Searches</title>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <style>
        /* Always set the map height explicitly to define the size of the div
         * element that contains the map. */
        #map {
            height: 100%;
        }
        /* Optional: Makes the sample page fill the window. */
        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
        }
    </style>
    <script>
        // This example requires the Places library. Include the libraries=places
        // parameter when you first load the API. For example:
        // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

        var map;
        var infowindow;
        var coordinates = {lat: 50.015, lng: 36.220};
        var mainMarker;
        //50.01529479696636,36.22036609932616
        var markers = [];


        function initMap() {
           // var pyrmont = {lat: -33.867, lng: 151.195};
           // var pyrmont = {lat: 50.015, lng: 36.220};

            map = new google.maps.Map(document.getElementById('map'), {
                center: coordinates,
                zoom: 15
            });

            drawMainMarker();

            refreshMap();

            infowindow = new google.maps.InfoWindow();
            /*
            var service = new google.maps.places.PlacesService(map);
            service.nearbySearch({
                location: coordinates,
                radius: 1000,
                type: ['cafe']
            }, callback);
            */
            google.maps.event.addListener(map, 'click', function(event) {

                if (mainMarker != undefined) {
                    mainMarker.setMap(null);
                    mainMarker

                    var latlng = event.latLng;
                    var lat = latlng.lat();
                    var lng = latlng.lng();
                    coordinates = {lat: lat, lng: lng};
                    console.log(coordinates);
                    resetMarkers();
                    drawMainMarker();
                    refreshMap();
                }
            });
        }

        function drawMainMarker() {
             mainMarker = new google.maps.Marker({
                // The below line is equivalent to writing:
                // position: new google.maps.LatLng(-34.397, 150.644)
                position: coordinates,
                map: map,
                title: 'Iam',
                draggable:true,
                clickable: true,
                animation: google.maps.Animation.DROP,
                visible: true
             });

        }

        function resetMarkers() {
         //   infoWindow.close();
            for (var i = 0; i < markers.length; i++) {
                markers[i].setMap(null);
            }
            markers.length = 0;
        }


        function refreshMap() {
            var service = new google.maps.places.PlacesService(map);
            service.nearbySearch({
                location: coordinates,
                radius: 500,
                type: ['cafe']
            }, callback);

        }

        function callback(results, status) {
            if (status === google.maps.places.PlacesServiceStatus.OK) {
                for (var i = 0; i < results.length; i++) {
                  createMarker(results[i]);
                }
            }
        }

        function createMarker(place) {
            var placeLoc = place.geometry.location;
            var marker = new google.maps.Marker({
                map: map,
                position: place.geometry.location
            });
            markers.push(marker);
            google.maps.event.addListener(marker, 'click', function() {
                infowindow.setContent(place.name);
                infowindow.open(map, this);
            });
        }
    </script>
</head>
<body>
<div id="map"></div>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCFePQo22izGTzUMMFLUGH5NBvRSboTGY0&libraries=places&callback=initMap" async defer></script>
</body>
</html>
